fetch("bitcoin.json").then(t => t.json()).then(t => { const e = new DataSet({ state: { start: "13-10-10", end: "19-12-12" } }), a = e.createView("origin").source(t); a.transform({ type: "filter", callback: function (t) { const a = t.date; return a >= e.state.start && a <= e.state.end } }); const n = new G2.Chart({ container: "container", forceFit: !0, height: 400, padding: [40, 40, 40, 60], animate: !1 }); n.source(a, { date: { tickCount: 10 }, value: { type: "linear", tickInterval: 1e3 } }), n.axis("value", { lable: { textStyle: { fill: "#aaaaaa" } }, grid: null }), n.line().position("date*value").color("black").opacity(.85).size(.75), n.render(), n.interact("slider", { container: "slider", padding: [40, 40, 40, 60], onChange: function (t) { const { startValue: a, endValue: n } = t; e.setState("start", a), e.setState("end", n) } }), n.interact("brush", { type: "X", onBrushstart() { }, onBrushend(t) { let e = t.date.length, a = t.date[0], n = t.date[e - 1]; $("#starting_date").text(a), $("#ending_date").text(n) } }) });